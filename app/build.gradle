/*
 * MIT License
 *
 * Copyright (c) 2022 Ã€ngel Mariages
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id 'com.google.devtools.ksp'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    def isReleaseBuild = project.gradle.startParameter.taskNames.any { it.toLowerCase().contains('release') }

    def versionPropsFile = file('version.properties')

    if (!versionPropsFile.canRead()) {
        throw new GradleException("Could not read version.properties!")
    }

    Properties versionProps = new Properties()

    versionProps.load(new FileInputStream(versionPropsFile))

    def versionMajor = versionProps['MAJOR'].toInteger()
    def versionMinor = versionProps['MINOR'].toInteger()
    def versionPatch = versionProps['PATCH'].toInteger()

    if (isReleaseBuild) {
        versionPatch += 1

        if (versionPatch == 100) {
            versionPatch = 0
            versionMinor += 1
        }
        if (versionMinor == 10) {
            versionMinor = 0
            versionMajor += 1
        }

        versionProps['MAJOR'] = versionMajor.toString()
        versionProps['MINOR'] = versionMinor.toString()
        versionProps['PATCH'] = versionPatch.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    compileSdk 34

    defaultConfig {
        applicationId "org.angelmariages.rodalieswidget"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            shrinkResources true
        }

        debug {
            debuggable true
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    namespace 'org.angelmariages.rodalieswidget'
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.22"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'com.github.kizitonwose.colorpreference:core:1.0.6'
    implementation 'com.google.code.gson:gson:2.10'

    implementation 'com.frybits.harmony:harmony:1.2.2'

    // OkHttp3
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // Do not update, breaks for SDK 33
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //noinspection GradleDependency
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    //noinspection GradleDependency
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.0.2')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.15.1'
    ksp 'com.squareup.moshi:moshi-kotlin-codegen:1.15.1'

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'

    // UiAutomator Testing
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}

